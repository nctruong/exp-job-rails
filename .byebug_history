c
params
current_user
c
context[:current_user]
context
c
current_user
c
user.role
user.super_admin!
user.role
c
@current_user = AdminUser.find(decoded[:user_id])
decoded = JwtHelper.decode(token)
token
header
c
AdminUser.find_by(email: params[:email])
params
c
next
c
current_user.permissions
ability.can? :read, Job
c
permission.subject_class.constantize
permission.action.to_sym
can permission.action.to_sym, permission.subject_class.constantize
permission.condition_attribute.blank?
c
nc
next
c
user.permissions.for_admin
useruser.permissions.for_admin
user.admin?
c
user.permissions
c
user.permissions
user.admin_user_permissions
user.permissions
user.permissions << Permission.first
user.permissions
c
context[:current_user]
context
c
current_user
c
current_user
@current_user
c
context[:current_user]
context
context[:current_user]
c
context[:current_user]
current_user
c
user.valid_password?(params[:password])
sign_in(user)
next
user
user.valid_password?(params[:password])
sign_in(user)
c
user.sign_in(params[:password])
next
c
params
c
params
c
params
c
params
c
params
